name: CI

on: [push]

jobs:
  build_ubuntu:
    name: Ubuntu Python ${{ matrix.python }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python: ['3.10']
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python }}
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    - name: Build with Gradle
      run: ./gradlew build --info
    - uses: actions/upload-artifact@v4
      name: Upload reports
      if: always()
      with:
        name: test-reports-linux-${{ github.run_id }}-${{ github.run_number }}
        path: |
          ./tests/reports/*.html
        retention-days: 10
    - uses: actions/upload-artifact@v4
      with:
        name: wheel-linux
        path: |
          ./dist/*.whl

  build_windows:
    name: Windows Python ${{ matrix.python }}
    runs-on: windows-latest
    strategy:
      matrix:
        python: ['3.10']
    steps:
      - uses: actions/checkout@v1
      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python }}
      - name: Build with Gradle
        run: .\gradlew build --info
      - name: Lint with Gradle
        run: .\gradlew lint --info
      - uses: actions/upload-artifact@v4
        name: Upload reports
        if: always()
        with:
          name: test-reports-windows-${{ github.run_id }}-${{ github.run_number }}
          path: |
            ./tests/reports/*.html
          retention-days: 10

  publish:
    runs-on: ubuntu-latest
    needs:
      - build_ubuntu
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: wheel-linux
      - name: list current dir content
        run: |
          sudo apt-get update
          sudo apt install tree
          tree
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload release binaries
        uses: alexellis/upload-assets@0.2.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          asset_paths: '["./*.whl"]'
